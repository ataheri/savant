/*
 * Splash.java
 *
 * Created on Nov 8, 2010, 10:22:11 AM
 *
 *    Copyright 2010 University of Toronto
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package savant.view.swing;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import javax.swing.BoxLayout;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JPanel;
import savant.settings.BrowserSettings;

/**
 *
 * @author mfiume
 */
public class Splash extends javax.swing.JDialog {

    JLabel status;
    String pad = "  ";

    /**
     * Creates new form Splash
     *
     * @param parent  the parent frame, typically the Savant main form
     * @param modal   true if this is being used as a modal dialog (i.e. as an about-box)
     */
    public Splash(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocationRelativeTo(null);

        Image i = new ImageIcon(getClass().getResource("/savant/images/splash.png")).getImage();
        this.setPreferredSize(new Dimension(i.getWidth(null),i.getHeight(null)));
        this.setMaximumSize(new Dimension(i.getWidth(null),i.getHeight(null)));
        this.setMinimumSize(new Dimension(i.getWidth(null),i.getHeight(null)));
        ImagePanel ip = new ImagePanel(i);
        this.splashPanel.add(ip, BorderLayout.CENTER);

        ip.setLayout(new BorderLayout());

        JPanel textPanel = new JPanel();
        textPanel.setOpaque(false);
        textPanel.setLayout(new BoxLayout(textPanel, BoxLayout.Y_AXIS));

        JLabel website = new JLabel(pad + "Website: " + BrowserSettings.url);
        formatLabel(website, false);
        textPanel.add(website);

        JLabel authors = new JLabel(pad + "Authors: Computational Biology Lab @ University of Toronto");
        formatLabel(authors, false);
        textPanel.add(authors);

        textPanel.add(getPadding(6));

        JLabel version = new JLabel(pad + "Version: " + BrowserSettings.version + " " + BrowserSettings.build);
        formatLabel(version, false);
        textPanel.add(version);

        textPanel.add(getPadding(6));

        status = new JLabel(modal ? "" : pad + "Status: Initializing ...");
        formatLabel(status, true);
        textPanel.add(status);

        //textPanel.add(getHorizontalPad());
        textPanel.add(getPadding(8));

        ip.add(textPanel,BorderLayout.SOUTH);
    }

    public final JPanel getPadding(int ps) {
        JPanel p = new JPanel();
        Dimension d = new Dimension(ps,ps);
        p.setMaximumSize(d);
        p.setMinimumSize(d);
        p.setPreferredSize(d);
        p.setOpaque(false);
        return p;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splashPanel = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        setUndecorated(true);

        splashPanel.setBackground(new java.awt.Color(204, 204, 255));
        splashPanel.setPreferredSize(new java.awt.Dimension(450, 150));

        javax.swing.GroupLayout splashPanelLayout = new javax.swing.GroupLayout(splashPanel);
        splashPanel.setLayout(splashPanelLayout);
        splashPanelLayout.setHorizontalGroup(
            splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 238, Short.MAX_VALUE)
        );
        splashPanelLayout.setVerticalGroup(
            splashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 144, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splashPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(splashPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Splash dialog = new Splash(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel splashPanel;
    // End of variables declaration//GEN-END:variables

    void setStatus(String msg) {
        this.status.setText(pad + "Status: " + msg);
    }

    private void formatLabel(JLabel label, boolean isBold) {
        if (isBold) {
            label.setFont(new Font("Arial", Font.BOLD, 11));
        } else {
            label.setFont(new Font("Arial", Font.PLAIN, 11));
        }
    }
}
