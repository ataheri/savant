/*
 *    Copyright 2010-2011 University of Toronto
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package savant.view.dialog;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;

import savant.api.util.DialogUtils;
import savant.controller.DataSourcePluginController;
import savant.data.sources.DataSource;
import savant.data.types.Genome;
import savant.view.swing.Savant;
import savant.view.swing.TrackFactory;

/**
 *
 * @author mfiume
 */
public class LoadGenomeDialog extends JDialog {

    /** Creates new form LoadGenomeDialog */
    public LoadGenomeDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        if (DataSourcePluginController.getInstance().hasOnlySavantRepoDataSource()) {
            fromOtherButton.setText("Repository");
        }

        initDropDowns();
        updateEnabledControls();
        getRootPane().setDefaultButton(okButton);
        setLocationRelativeTo(parent);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        withoutSequenceButtonGroup = new javax.swing.ButtonGroup();
        fromFileButton = new javax.swing.JButton();
        fromLabel = new javax.swing.JLabel();
        fromURLButton = new javax.swing.JButton();
        fromOtherButton = new javax.swing.JButton();
        publishedGenomeRadio = new javax.swing.JRadioButton();
        javax.swing.JLabel speciesLabel = new javax.swing.JLabel();
        genomesCombo = new javax.swing.JComboBox();
        track1Check = new javax.swing.JCheckBox();
        track2Check = new javax.swing.JCheckBox();
        track3Check = new javax.swing.JCheckBox();
        track4Check = new javax.swing.JCheckBox();
        userSpecifiedRadio = new javax.swing.JRadioButton();
        javax.swing.JLabel nameLabel = new javax.swing.JLabel();
        javax.swing.JLabel lengthLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        lengthField = new javax.swing.JTextField();
        javax.swing.JButton cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        withoutSequenceButtonGroup.add(publishedGenomeRadio);
        withoutSequenceButtonGroup.add(userSpecifiedRadio);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Load Genome");

        fromFileButton.setText("File");
        fromFileButton.setPreferredSize(new java.awt.Dimension(135, 25));
        fromFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromFileButtonActionPerformed(evt);
            }
        });

        fromLabel.setText("Load from:");

        fromURLButton.setText("URL");
        fromURLButton.setPreferredSize(new java.awt.Dimension(135, 25));
        fromURLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromURLButtonActionPerformed(evt);
            }
        });

        fromOtherButton.setText("Other Datasource");
        fromOtherButton.setPreferredSize(new java.awt.Dimension(135, 25));
        fromOtherButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromOtherButtonActionPerformed(evt);
            }
        });

        publishedGenomeRadio.setText("Published Genome");
        publishedGenomeRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishedGenomeRadioActionPerformed(evt);
            }
        });

        speciesLabel.setText("Genome:");

        genomesCombo.setToolTipText("Species of a published genome to load");

        track1Check.setText("Track 1");
        track1Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                track1CheckActionPerformed(evt);
            }
        });

        track2Check.setText("Track 2");

        track3Check.setText("Track 3");

        track4Check.setText("Track 4");

        userSpecifiedRadio.setText("User-specified");
        userSpecifiedRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSpecifiedRadioActionPerformed(evt);
            }
        });

        nameLabel.setText("Name:");

        lengthLabel.setText("Length:");

        nameField.setToolTipText("Name of reference (must correspond to name in records)");
        nameField.setEnabled(false);

        lengthField.setToolTipText("Length in basepairs of reference");
        lengthField.setEnabled(false);
        lengthField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lengthFieldFocusLost(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(publishedGenomeRadio)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(21, 21, 21)
                                    .addComponent(fromFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fromURLButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(fromOtherButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(fromLabel)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(speciesLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(track2Check)
                                        .addComponent(track3Check)
                                        .addComponent(track4Check)
                                        .addComponent(track1Check)
                                        .addComponent(genomesCombo, 0, 370, Short.MAX_VALUE))))
                            .addContainerGap())
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(userSpecifiedRadio, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGap(58, 58, 58)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(nameLabel)
                                        .addComponent(lengthLabel))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lengthField, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                                        .addComponent(nameField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))))
                            .addGap(30, 30, 30)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cancelButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(okButton)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fromLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromFileButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromURLButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fromOtherButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(publishedGenomeRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(speciesLabel)
                    .addComponent(genomesCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 4, Short.MAX_VALUE)
                .addComponent(track1Check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(track2Check)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(track3Check)
                .addGap(7, 7, 7)
                .addComponent(track4Check)
                .addGap(9, 9, 9)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userSpecifiedRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lengthField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lengthLabel))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButton)
                    .addComponent(cancelButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        
        if (!userSpecifiedRadio.isSelected() && !this.publishedGenomeRadio.isSelected()) {
            return;
        }

        if (userSpecifiedRadio.isSelected() && !validateUserSpecifiedLength()) {
            return;
        }

        if (userSpecifiedRadio.isSelected()) {
            isPublishedGenome = false;
            loadedGenome = new Genome(nameField.getText(), Integer.parseInt(lengthField.getText()));

        } else {
            isPublishedGenome = true;
            loadedGenome = (Genome)genomesCombo.getSelectedItem();
        }

        Savant.getInstance().setGenome(loadedGenome.getName(), loadedGenome, null);

        setVisible(false);
}//GEN-LAST:event_okButtonActionPerformed

    private void lengthFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lengthFieldFocusLost
        //validateUserSpecifiedLength();
}//GEN-LAST:event_lengthFieldFocusLost

    private void publishedGenomeRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publishedGenomeRadioActionPerformed
        updateEnabledControls();
}//GEN-LAST:event_publishedGenomeRadioActionPerformed

    private void userSpecifiedRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSpecifiedRadioActionPerformed
        updateEnabledControls();
}//GEN-LAST:event_userSpecifiedRadioActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void track1CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_track1CheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_track1CheckActionPerformed

    private void fromOtherButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromOtherButtonActionPerformed
        setVisible(false);
        DataSource s;
        try {
            if (DataSourcePluginController.getInstance().hasOnlySavantRepoDataSource()) {
                s = DataSourcePluginController.getInstance().getDataSourcePlugins().get(0).getDataSource();
            } else {
                s = DataSourcePluginDialog.getDataSource(this);
            }
            if (s != null) {
                Savant.getInstance().setGenomeFromTrack(TrackFactory.createTrack(s), null);
                return;
            }
        } catch (Exception x) {
            DialogUtils.displayException("Error", "Unable to load genome from the plugin datasource.", x);
        }
        Savant.getInstance().showOpenGenomeDialog();
}//GEN-LAST:event_fromOtherButtonActionPerformed

    private void fromURLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromURLButtonActionPerformed
        setVisible(false);
        Savant.getInstance().showOpenURLDialog(true);
}//GEN-LAST:event_fromURLButtonActionPerformed

    private void fromFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromFileButtonActionPerformed
        setVisible(false);
        Savant.getInstance().showOpenTracksDialog(true);
}//GEN-LAST:event_fromFileButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fromFileButton;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JButton fromOtherButton;
    private javax.swing.JButton fromURLButton;
    private javax.swing.JComboBox genomesCombo;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField lengthField;
    private javax.swing.JTextField nameField;
    private javax.swing.JButton okButton;
    private javax.swing.JRadioButton publishedGenomeRadio;
    private javax.swing.JCheckBox track1Check;
    private javax.swing.JCheckBox track2Check;
    private javax.swing.JCheckBox track3Check;
    private javax.swing.JCheckBox track4Check;
    private javax.swing.JRadioButton userSpecifiedRadio;
    private javax.swing.ButtonGroup withoutSequenceButtonGroup;
    // End of variables declaration//GEN-END:variables
    public boolean isPublishedGenome = true;
    public Genome loadedGenome;

    private void initDropDowns() {
        genomesCombo.setModel(new DefaultComboBoxModel(Genome.getDefaultGenomes()));
        genomesCombo.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateGeneList();
            }
        });
        updateGeneList();
    }

    private void updateGeneList() {
        Genome curGenome = (Genome)genomesCombo.getSelectedItem();
//        genesCombo.setModel(new DefaultComboBoxModel(curGenome.getGenes()));
//        genesCombo.setEnabled(genesCombo.getItemCount() > 0);
    }

    private void updateEnabledControls() {
        setPublishedGenomeControlsEnabled(publishedGenomeRadio.isSelected());
        setUserSpecifiedControlsEnabled(userSpecifiedRadio.isSelected());
    }

    private void setPublishedGenomeControlsEnabled(boolean isEnabled) {
        genomesCombo.setEnabled(isEnabled);
//        genesCombo.setEnabled(isEnabled && genesCombo.getItemCount() > 0);
    }

    private void setUserSpecifiedControlsEnabled(boolean isEnabled) {
        lengthField.setEnabled(isEnabled);
        nameField.setEnabled(isEnabled);
    }

    private boolean validateUserSpecifiedLength() {
        String refname = nameField.getText();
        if (refname.equals("")) {
            DialogUtils.displayError("Invalid name.");
            nameField.requestFocus();
            return false;
        }

        String text = lengthField.getText();
        try {
            int i = Integer.parseInt(text);
            if (i <= 0) {
                throw new Exception();
            }
        } catch (Exception e) {
            DialogUtils.displayError("Invalid length.");
            lengthField.requestFocus();
            return false;
        }

        return true;
    }
}
